#!/usr/bin/env ruby

require 'gbs/utils'
require 'gbs/project_manager'
require 'gbs/project'
require 'gbs/userdata'

options = GBS::Utils.parse_options [
    %w( -h --help       Print this help and exit ),
    %w( -v --version    Print version and exit   ),
    %w( -l --list       List available projects  ),
]

ARG_OPTS, ARG_PARAMS = GBS::Utils.parse_arguments(options, ARGV)

if ARG_OPTS[:version]
    puts "gbs-run v0.1.0"
    exit
end

if ARG_OPTS[:help]
    GBS::Utils.send_help(options)
    exit
end


module GBS
    ProjectManager.init

    if ARG_OPTS[:list]
        ProjectManager.projects.each do |project|
            puts project.name
        end

        exit
    end

    if ARG_PARAMS.length == 0
        GBS::Utils.send_help(options)
        exit
    end

    # Find project by name
    project = ProjectManager[ARG_PARAMS[0]]

    if project.nil?
        warn "Project #{ARG_PARAMS[0]} not found."
        exit 1
    end

    if ARG_PARAMS.length == 1
        puts "Tasks for project #{project.name}:"
        project.tasks.each do |name, task|
            puts "- #{name}"
        end

        exit
    end

    # Run specified tasks
    ARG_PARAMS[1..-1].each do |param|
        puts "Running task :#{param} for #{project.name}..."
        project.tasks[param.to_sym].run
    end
end
